
%% PANEL CONTROL            

function DirectControlPanel                %%w skrocie taki interfejs dla użytkownika z informacjami o pompach czy ich położeniu


global vc VIDs GuIformat Panels;      %Vids - dane o silnikach najpewniej  

Control = uipanel('Visible','on',...            %stworzenie panelu z informacjami
    'Position',[0 .975 1 .025]);
STEPPERSLIST = 'XYZD123';            %zmienna z listą napędów, osi czy innych danych i oznaczeń silników krokowych
%pętla od 1 do ilości kroków możliwych silnika
for i = 1:GuIformat.StepperCount
    GuIformat.StepperPOS(i) = uicontrol(Control,...    %stworzenie interaktywnego panelu z polami tekstowymi
        'Units','normalized',...
        'Style','Text',...
        'String',VIDs.crrntSTEPS(i),...
        'Position',[(i-1)/GuIformat.StepperCount .5 1/GuIformat.StepperCount .5],...
        'HandleVisibility','off');
    GuIformat.StepperAngle(i) = uicontrol(Control,...
        'Units','normalized',...
        'Style','Text',...
        'String',VIDs.crrntSTEPS(i),...
        'Position',[(i-1)/GuIformat.StepperCount 0 1/GuIformat.StepperCount .5],...
        'HandleVisibility','off');
end
end

function ManualControlPanel     %ręczne sterowanie pompami

global VIDs GuIformat Panels;

ControlPos = uipanel(Panels.ControlPanel,...
    'Visible','on',...        %włączenie widoczności panelu xd
    'Position',[0 0 .25 1]);    %basically layout, posx,posy,szerx,szery)

ControlSyr = uipanel(ControlPos,...    %panel z kontrolkami
    'Visible','on',...
    'Position',[0 .45 1 .55]);

PumpNames = {'Waste','1','2','3','4','5','6','7','8','9'}        %jakże doniosłe nazwy pomp, utożsamiam się z jedną z nich

for i = 1:GuIformat.PumpCount            %dla każdej pompy tworzy zestaw kontrolek
    ControlSyrInd(i) = uipanel(ControlSyr,...
        'Visible','on',...
        'Position',[0 ((GuIformat.PumpCount+1)-i)/(GuIformat.PumpCount+1) 1 1/(GuIformat.PumpCount+1)]);
    GuIformat.SyrType(i) = uicontrol(ControlSyrInd(i),...
        'Units','normalized',...
        'Style','popupmenu',...
        'Value',4,...
        'String',{'3mL','15mL','50mL','Peristaltic'},...
        'Position',[0 0 1/4 1],...    %%%%%%%%%%%%%%%%%%%POZYCJA POMPY NA PANELU  'Position',[x-poziom y-pion width height-1=pelna wysokosc] 
        'HandleVisibility','off');
    GuIformat.SyrAmo(i) = uicontrol(ControlSyrInd(i),...
        'Units','normalized',...
        'Style','Edit',...%ręczne wpisanie wartości mikrolitrów
        'String','100',...            %domyślnie jest 100
        'Position',[1/4 0 3/16 1],...
        'HandleVisibility','off');
    GuIformat.SyrTXT(i) = uicontrol(ControlSyrInd(i),...
        'Units','normalized',...
        'Style','text',...    
        'String','uL',...            %po prostu zapis, że wartość wcześniej jest w mikrolitrach
        'Position',[7/16 0 1/16 1],...        %pozycja panelu gui nie strzykawki
        'HandleVisibility','off');
    GuIformat.SyrADD(i) = uicontrol(ControlSyrInd(i),...
        'Units','normalized',...
        'Style','Pushbutton',...
        'String',strcat('ADD',{' '},PumpNames{i}),...  %add 1 lub add waste
        'Userdata',[i,1],...    %dane pomocnicze i - nr pompy nr-kierunek 1-dodawanie
        'Position',[2/4 0 1/4 1],...
        'HandleVisibility','off',...
        'BackgroundColor',GuIformat.color.c,...
        'Callback',@ManualADD_PBCallback);
    GuIformat.SyrSUB(i) = uicontrol(ControlSyrInd(i),...
        'Units','normalized',...
        'Style','Pushbutton',...
        'String',strcat('SUBTRACT',{' '},PumpNames{i}),...
        'Userdata',[i,-1],...        %to samo co wyżej, ale kierunek to -1 czyli substract
        'Position',[3/4 0 1/4 1],...
        'HandleVisibility','off',...
        'BackgroundColor',GuIformat.color.c,...
        'Callback',@ManualADD_PBCallback);
end

    function ManualADD_PBCallback(hObject,callbackdata)            %coś ala wyzwalacz przy add lub substract
        for q = 1:GuIformat.PumpCount
            set(GuIformat.SyrADD(q),'Enable','Off');    %wyłączenie wszystkich przycisków
            set(GuIformat.SyrSUB(q),'Enable','Off');
        end
        UpdateMaxSpeed            %wywołuje tą funkcję
        NUM = get(hObject,'Userdata');            %odczytanie potrzebnych wartości
        PUMP = NUM(1);
        DIRECTION = NUM(2);
        SyrAmo = str2num(get(GuIformat.SyrAmo(PUMP),'String'));
        VOLUMES = zeros(1,GuIformat.ReagentCount);
        SUCTION = 0;

        if PUMP == 1                    %warunek dla pompy odpadowej czyli pompy nr1
            SUCTION = DIRECTION*SyrAmo;
        else
            VOLUMES(PUMP-1) = DIRECTION*SyrAmo;
        end
        STYLE = 1;
        SyringeMove(VOLUMES,SUCTION,STYLE,1)            %funkcja sterująca ruchem silników pompujących za odpowiednią ilość cieczy
        UpdateSettings
        for q = 1:GuIformat.PumpCount            %zapisanie zmian w ilości cieczy itp
            set(GuIformat.SyrADD(q),'Enable','On');
            set(GuIformat.SyrSUB(q),'Enable','On');
        end
    end

ControlSyrClean = uipanel(ControlSyr,...        %panel dziedziczący po kontroli pomp do czyszczenia ich
    'Visible','on',...
    'Position',[0 (10-10)/10 1 1/10]);                %podobno te współżędne są znormalizowane ale ok, 1/10 czy 1/4 to jest procent wysokosci lub szerokosci panelu nadrzędnego
GuIformat.SyrClean = uicontrol(ControlSyrClean,...
    'Units','normalized',...
    'Style','Pushbutton',...
    'String','Clean',...                %DODANIE PRZYCISKU CLEAN
    'Position',[0 1/2 1 1/2],...
    'HandleVisibility','off',...
    'Callback',@CleanPumps_PBCallback);
    function CleanPumps_PBCallback(hObject,callbackdata)        %jak naciśniemy przycisk to wywpłana jest ta funkcja i czyszczonko ma miejsce
        CleanRobot
    end
GuIformat.SyrLoad = uicontrol(ControlSyrClean,...
    'Units','normalized',...
    'Style','Pushbutton',...
    'String','Load',...                    %przycisk load
    'Position',[0 0 1 1/2],...
    'HandleVisibility','off',...
    'Callback',@LoadPumps_PBCallback);
    function LoadPumps_PBCallback(hObject,callbackdata)    %po nacisnieciu wywołujemy to
        LoadLiquids
    end


ControlPBs = uipanel(ControlPos,...
    'Visible','on',...
    'Position',[0 .05 1 .4]);

GuIformat.movePB(2,1)= uicontrol(ControlPBs,...            %dodanie przycisków left right down up itp
    'Units','normalized',...
    'Style','pushbutton',...
    'String','Forward',...
    'UserData',VIDs.Forward,...
    'Position',[0/3 2/3 2/3 1/3],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@ManualMove_PBCallback);
GuIformat.movePB(1,1) = uicontrol(ControlPBs,...
    'Units','normalized',...
    'Style','pushbutton',...
    'String','Left',...
    'UserData',VIDs.Left,...
    'Position',[0/3 1/3 1/3 1/3],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@ManualMove_PBCallback);
GuIformat.movePB(1,2) = uicontrol(ControlPBs,...
    'Units','normalized',...
    'Style','pushbutton',...
    'String','Right',...
    'UserData',VIDs.Right,...
    'Position',[1/3 1/3 1/3 1/3],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@ManualMove_PBCallback);
GuIformat.movePB(2,2) = uicontrol(ControlPBs,...
    'Units','normalized',...
    'Style','pushbutton',...
    'String','Backward',...
    'UserData',VIDs.Backward,...
    'Position',[0/3 0/3 2/3 1/3],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@ManualMove_PBCallback);
GuIformat.movePB(3,1) = uicontrol(ControlPBs,...
    'Units','normalized',...
    'Style','pushbutton',...
    'String','Up',...
    'UserData',VIDs.Up,...
    'Position',[2/3 3/6 1/3 3/6],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@ManualMove_PBCallback);
GuIformat.movePB(3,2) = uicontrol(ControlPBs,...
    'Units','normalized',...
    'Style','pushbutton',...
    'String','Down',...
    'UserData',VIDs.Down,...
    'Position',[2/3 0/6 1/3 3/6],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@ManualMove_PBCallback);

ControlEDTs = uipanel(ControlPos,...
    'Visible','on',...
    'Position',[0 0 1 .05]);

GuIformat.DistTXT = uicontrol(ControlEDTs,...
    'Units','normalized',...
    'Style','text',...
    'String','Distance (mm):',...
    'Position',[0 0 .5 1],...
    'HandleVisibility','off');
GuIformat.DistEDT = uicontrol(ControlEDTs,...
    'Units','normalized',...
    'Style','edit',...
    'String','5',...
    'Position',[.5 0 .5 1],...
    'HandleVisibility','off');

    function ManualMove_PBCallback(hObject,callbackdata)
        GuIformat.STOP = 0;
        Direction = get(hObject,'UserData');
        Distance = str2num(get(GuIformat.DistEDT,'String'));
        Vector = Direction*Distance;
        Location = VIDs.crrntXYZmm + Vector;
        set(hObject,'BackgroundColor',GuIformat.color.o);
        set(hObject,'Enable','Off');
        if Direction(1) ~= 0 && Direction(2) ~= 0
            Go2XY_mm([Location(1),Location(2)],1);
        end
        
        Go2Z(Location(3));
        
        set(hObject,'BackgroundColor',GuIformat.color.c);
        set(hObject,'Enable','On');
        GuIformat.STOP = 1;
    end

end

function PlateControlPanel

global a VIDs GuIformat BoxInfo Panels;

Control = uipanel(Panels.ControlPanel,...
    'Visible','on',...
    'Position',[.25 0 .75 1]);

%% Maintenance buttons

Maintenance = uipanel(Control,'Visible','on',...
    'Position',[0 0 1 .1]);


Zpos = {'Enclosure Top','Plate Top','Plate Bottom'};        %tutaj są tworzone różne przyciski jak ustawianie wysokości czy zerowania pozycji robota

for i = 1:3
    ZBreadthPanel(i) = uipanel(Maintenance,'Visible','on',...
        'Position',[(i-1)/4 0 (1/4) (1)]);
    GuIformat.Zset(i) = uicontrol(ZBreadthPanel(i),...
        'Units','normalized',...
        'Style','Pushbutton',...
        'String',strcat({'Set '},Zpos{i},{' Height'}),...        
        'Position',[0 2/3 1 1/3],...
        'Userdata',i,...
        'BackgroundColor',GuIformat.color.c,...
        'HandleVisibility','off',...
        'Callback',@ZlayerSet_Callback);
    GuIformat.Zgo(i) = uicontrol(ZBreadthPanel(i),...
        'Units','normalized',...
        'Style','Pushbutton',...
        'String',strcat({'Go to '},Zpos{i}),...
        'Position',[0 1/3 1 1/3],...
        'Userdata',i,...
        'BackgroundColor',GuIformat.color.c,...
        'HandleVisibility','off',...
        'Callback',@ZlayerGo_Callback);
    GuIformat.Zlayer(i) = uicontrol(ZBreadthPanel(i),...
        'Units','normalized',...
        'Style','Edit',...
        'Userdata',i,...
        'String',GuIformat.ZValues(i),...
        'Position',[0 0/3 1 1/3],...
        'HandleVisibility','off',...
        'Callback',@ZlayerSet_Callback);
end

    function ZlayerGo_Callback(hObject,callbackdata)
        pos = get(hObject,'Userdata');
        GOTOLAYER(pos,0);
    end

    function ZlayerSet_Callback(hObject,callbackdata)
        pos = get(hObject,'Userdata');
        height = VIDs.crrntSTEPS(3);
        set(GuIformat.Zlayer(pos),'String',num2str(height));
        GuIformat.ZValues(pos) = height;
        UpdateSettings;
    end


GuIformat.HOMEPB = uicontrol(Maintenance,...
    'Units','normalized',...
    'Style','pushbutton',...
    'String','Home XYZ',...
    'Position',[.75 0 .15 1],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@HOME_PBCallback);

    function HOME_PBCallback(hObject,callbackdata)
        HOMEXYZ;
    end

%% Disable Motors                    % ZGADNIJCIE CO TO ROBI
GuIformat.DisablePB = uicontrol(Maintenance,...
    'Units','normalized',...
    'Style','pushbutton',...
    'String','Disable Motors',...
    'Position',[.9 0 .1 1],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@Disable_PBCallback); %%%%%%%%%

    function Disable_PBCallback(hObject,callbackdata)
%         for j = 1:100
%             HOMEXYZ
%             for i = 1:20            %zakomentowana pętla wygląda na zerowanie pozycji robota?
%                 Go2Z(45)
%                 Go2Z(0)
%                 
%             end
%         end
        DISABLE_ALL;
    end

%% Tab Group

TABGROUP = uitabgroup(Control,'Visible','on',...
    'Position',[0 .1 1 .9]);

%% 96 Well Plate Buttons                                                %kontrolki to płytki 96-dołkowej
Plate96TAB = uitab('Parent',TABGROUP,'Title','96 Well Plate');
Control96 = uipanel(Plate96TAB,'Visible','on',...
    'Position',[0 .1 1 .9]);

Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';                %śliczny alfabet, pokazali że jednak potrafią coś dobrze zrobić
%tak na serio są to etykiety rzędów

for x = 1:12                                        %basically stworzenie siatki przycisków
    for y = 1:8
        GuIformat.w96(x,y) = uicontrol(Control96,...
            'Units','normalized',...
            'Style','Togglebutton',...
            'String',strcat(Alphabet(y),num2str(x)),...
            'UserData',[96,x,y],...
            'Position',[(x-1)/12 (8-y)/8 1/12 1/8],...
            'HandleVisibility','off',...
            'BackgroundColor',GuIformat.color.c,...
            'Callback',@MoveWellPlate_PBCallback);
    end
end

Setup96 = uipanel(Plate96TAB,'Visible','on',...
    'Position',[0 0 1 .1]);

Calibrate96 = uipanel(Setup96,'Visible','on',...
    'Position',[0 0 1 1]);

WellXOffset = uicontrol(Calibrate96,...
    'Units','normalized',...
    'Style','Text',...
    'String','X Offset (mm):',...
    'Position',[0/5 1/2 1/5 1/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c);
GuIformat.WellXOffset(1) = uicontrol(Calibrate96,...
    'Units','normalized',...
    'Style','Edit',...
    'String','2.5',...
    'Position',[1/5 1/2 1/5 1/2],...
    'HandleVisibility','off');
WellYOffset = uicontrol(Calibrate96,...
    'Units','normalized',...
    'Style','Text',...
    'String','Y Offset (mm):',...
    'Position',[0/5 0/2 1/5 1/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c);
GuIformat.WellYOffset(1) = uicontrol(Calibrate96,...
    'Units','normalized',...
    'Style','Edit',...
    'String','2.5',...
    'Position',[1/5 0/2 1/5 1/2],...
    'HandleVisibility','off');
GuIformat.WellGoBackOffset(1) = uicontrol(Calibrate96,...
    'Units','normalized',...
    'Style','Togglebutton',...
    'String','Go Back',...
    'Userdata',96,...
    'Position',[2/5 0/2 1/5 2/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@GoBackOffset_PBCallback);
GuIformat.WellGo2Offset(1) = uicontrol(Calibrate96,...
    'Units','normalized',...
    'Style','Togglebutton',...
    'String','Go to Offset',...
    'Userdata',96,...
    'Position',[3/5 0/2 1/5 2/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@Go2Offset_PBCallback);
GuIformat.WellSetOffset(1) = uicontrol(Calibrate96,...
    'Units','normalized',...
    'Style','Togglebutton',...
    'String','Set Offset',...
    'Userdata',96,...
    'Position',[4/5 0/2 1/5 2/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@SetOffset_PBCallback);

%% 384 Well Plate Buttons
Plate384TAB = uitab('Parent',TABGROUP,'Title','384 Well Plate');
Control384 = uipanel(Plate384TAB,'Visible','on',...
    'Position',[0 .1 1 .9]);

Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
for x = 1:24
    for y = 1:16
        GuIformat.w384(x,y) = uicontrol(Control384,...
            'Units','normalized',...
            'Style','Togglebutton',...
            'String',strcat(Alphabet(y),num2str(x)),...
            'UserData',[384,x,y],...
            'Position',[(x-1)/24 (16-y)/16 1/24 1/16],...
            'HandleVisibility','off',...
            'BackgroundColor',GuIformat.color.c,...
            'Callback',@MoveWellPlate_PBCallback);
    end
end

    function MoveWellPlate_PBCallback(hObject,callbackdata)
        set(hObject,'BackgroundColor',GuIformat.color.o);
        DATA = get(hObject,'UserData');
        TYPE = DATA(1);
        WELL = DATA(2:3);
        if GuIformat.ShiftState == 0
            LAYER = 2;
        else
            LAYER = 3;
        end
        
        GOTOWELL(TYPE, WELL, LAYER);
        set(hObject,'BackgroundColor',GuIformat.color.c);
    end

Setup384 = uipanel(Plate384TAB,'Visible','on',...                %tworzenie panelu kalibracyjnego
    'Position',[0 0 1 .1]);

Calibrate384 = uipanel(Setup384,'Visible','on',...
    'Position',[0 0 1 1]);

WellXOffset = uicontrol(Calibrate384,...
    'Units','normalized',...
    'Style','Text',...
    'String','X Offset (mm):',...
    'Position',[0/5 1/2 1/5 1/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c);
GuIformat.WellXOffset(2) = uicontrol(Calibrate384,...
    'Units','normalized',...
    'Style','Edit',...                %tu wpisujemy wstępne przesuniecie w osi x i pozniej analogicznie dla osi y
    'String','2.5',...
    'Position',[1/5 1/2 1/5 1/2],...
    'HandleVisibility','off');
WellYOffset = uicontrol(Calibrate384,...
    'Units','normalized',...
    'Style','Text',...
    'String','Y Offset (mm):',...
    'Position',[0/5 0/2 1/5 1/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c);
GuIformat.WellYOffset(2) = uicontrol(Calibrate384,...
    'Units','normalized',...
    'Style','Edit',...
    'String','2.5',...
    'Position',[1/5 0/2 1/5 1/2],...
    'HandleVisibility','off');
GuIformat.WellGoBackOffset(2) = uicontrol(Calibrate384,...                %przenoszenie pipet do ustawionych offsetów(?)
    'Units','normalized',...
    'Style','Togglebutton',...
    'String','Go Back',...                % nie wiem co ta funkcja robi ale wywołuje fx go back
    'Userdata',384,...
    'Position',[2/5 0/2 1/5 2/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@GoBackOffset_PBCallback);
    function GoBackOffset_PBCallback(hObject,callbackdata)
        TYPE = get(hObject,'Userdata')
        if TYPE == 96
            TYPE = 1;
        elseif TYPE == 384
            TYPE = 2;
        end
        Ymm = str2num(get(GuIformat.WellXOffset(TYPE),'String'));
        Xmm = str2num(get(GuIformat.WellYOffset(TYPE),'String'));
        Location(1) = VIDs.crrntXYZmm(1) + Xmm;
        Location(2) = VIDs.crrntXYZmm(2) - Ymm;
        Go2XY_mm(Location,1)
    end
GuIformat.WellGo2Offset(2) = uicontrol(Calibrate384,...
    'Units','normalized',...
    'Style','Togglebutton',...
    'String','Go to Offset',...
    'Userdata',384,...
    'Position',[3/5 0/2 1/5 2/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@Go2Offset_PBCallback);
    function Go2Offset_PBCallback(hObject,callbackdata)
        TYPE = get(hObject,'Userdata')
        if TYPE == 96
            TYPE = 1;
        elseif TYPE == 384
            TYPE = 2;
        end
        Ymm = str2num(get(GuIformat.WellXOffset(TYPE),'String'));
        Xmm = str2num(get(GuIformat.WellYOffset(TYPE),'String'));
        Location(1) = VIDs.crrntXYZmm(1) - Xmm;
        Location(2) = VIDs.crrntXYZmm(2) + Ymm;
        Go2XY_mm(Location,1)
    end
GuIformat.WellSetOffset(2) = uicontrol(Calibrate384,...
    'Units','normalized',...
    'Style','Togglebutton',...
    'String','Set Offset',...
    'Userdata',384,...
    'Position',[4/5 0/2 1/5 2/2],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@SetOffset_PBCallback);
    function SetOffset_PBCallback(hObject,callbackdata)
        TYPE = get(hObject,'Userdata')
        if TYPE == 96
            TYPE = 1;
        elseif TYPE == 384
            TYPE = 2;
        end
        Ymm = str2num(get(GuIformat.WellXOffset(TYPE),'String'));
        Xmm = str2num(get(GuIformat.WellYOffset(TYPE),'String'));
        if TYPE == 1
            for x = 1:12
                GuIformat.w96POSmm.x(x) = GuIformat.w96POSmm.x(x) + Ymm;
            end
            for y = 1:8
                GuIformat.w96POSmm.y(y) = GuIformat.w96POSmm.y(y) - Xmm;
            end
        elseif TYPE == 2
            for x = 1:24
                GuIformat.w384POSmm.x(x) = GuIformat.w384POSmm.x(x) + Ymm;            %to jest dla innej płytki nas nie interesuje
            end
            for y = 1:16
                GuIformat.w384POSmm.y(y) = GuIformat.w384POSmm.y(y) - Xmm;
            end
        end
        UpdateSettings
        HOMEXYZ
    end

end

function ArduinoConnectPanel                                    %%łączenie z arudinoo

global VIDs GuIformat BoxInfo Panels;

ControlBig = uipanel('Visible','on',...            %once again gui
    'Position',[0 0 1 .05]);

Control = uipanel(ControlBig,'Visible','on',...
    'Position',[0 0 0.35 1]);

%% Button Group
GuIformat.PORTtxt = uicontrol(Control,...
    'Units','normalized',...
    'Style','text',...
    'String','Port:',...
    'Position',[0 0 .125 .6],...
    'HandleVisibility','off');
GuIformat.PORTedt = uicontrol(Control,...
    'Units','normalized',...
    'Style','edit',...
    'String',BoxInfo.PORT,...
    'Position',[.125 0 .125 1],...
    'HandleVisibility','off',...
    'Callback',@UpdatePort_GUI);
    function UpdatePort_GUI(hObject,callbackdata)
        UpdateSettings();
    end
GuIformat.DetectPort = uicontrol(Control,...
    'Units','normalized',...
    'Style','togglebutton',...
    'String','Detect Port',...
    'Value',0,...
    'Position',[.25 0 .25 1],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@DetectPort_PBCallback);
    function DetectPort_PBCallback(hObject,callbackdata)
        freeports = seriallist("available");
        [indx,tf] = listdlg('ListString',freeports,'SelectionMode','single')
        if tf == 1
            set(GuIformat.PORTedt,'String',freeports{indx}(4:length(freeports{indx})))
        end
    end
GuIformat.ADConnectPB = uicontrol(Control,...
    'Units','normalized',...
    'Style','togglebutton',...
    'String','Connect',...
    'Value',0,...
    'Position',[.5 0 .25 1],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@ADConnect_PBCallback);
    function ADConnect_PBCallback(hObject,callbackdata)
        State = get(hObject,'Value');
        if State == 0
            HOMEXYZ;
            DISABLE_ALL
            if ~isempty(instrfind)
                DISABLE_ALL;
                fclose(instrfind);
                delete(instrfind);
            end
            set(hObject,'Value',0);
            set(hObject,'String','Connect');
            set(hObject,'BackgroundColor',GuIformat.color.c);
            GuIformat.DEBUGMODE = 1;
        else
            CONN = waitbar(0,'Connecting to Arduino...');
            
            PORT = strcat('COM',get(GuIformat.PORTedt,'String'));
            global a;
            a=serial(PORT); % assign serial port object
            set(a, 'BaudRate', 9600); % set BaudRate to 9600
            set(a, 'Parity', 'none'); % set Parity Bit to None
            set(a, 'DataBits', 8); % set DataBits to 8
            set(a, 'StopBit', 1); % set StopBit to 1
            set(a, 'TimeOut', 60*5); % set StopBit to 1
            %display the properties of serial port object in MATLAB Window
            disp(get(a,{'Type','Name','Port','BaudRate','Parity','DataBits','StopBits','TimeOut'}));
            waitbar(1/3,CONN)
            fopen(a); % Open Serial Port Object
            GuIformat.DEBUGMODE = 0;
            disp('Serial port is opened');
            set(hObject,'Value',1);
            set(hObject,'String','Disconnect');
            set(hObject,'BackgroundColor',GuIformat.color.o);
            pause(2);
            waitbar(2/3,CONN)
            UpdateSettings;
            
            DISABLE_ALL
            close(CONN)
            uiwait(warndlg('PHIL Connected','Connected'));
        end
    end
GuIformat.Connect_HomePB = uicontrol(Control,...
    'Units','normalized',...
    'Style','togglebutton',...
    'String','Home',...
    'Value',0,...
    'Position',[.75 0 .25 1],...
    'HandleVisibility','off',...
    'BackgroundColor',GuIformat.color.c,...
    'Callback',@HOMEXYZ_PBCallback);
    function HOMEXYZ_PBCallback(hObject,callbackdata)
        HOMEXYZ;
    end

Configuration = uipanel(ControlBig,'Visible','on',...
    'Position',[.35 0 0.65 1]);

ConfigLoctxt = uicontrol(Configuration,...
    'Units','normalized',...
    'Style','text',...
    'String','Configuration File:',...
    'Position',[0 1/2 3/6 1/2],...
    'HandleVisibility','off');
GuIformat.ConfigLocEDT = uicontrol(Configuration,...
    'Units','normalized',...
    'Style','edit',...
    'String',fullfile(GuIformat.Configpathname,GuIformat.Configfilename),...
    'Position',[0 0 3/6 1/2],...
    'HandleVisibility','off');

GuIformat.ConfigBrowsePB = uicontrol(Configuration,...
    'Units','normalized',...
    'Style','Pushbutton',...
    'String','Browse',...
    'Position',[3/6 0 1/6 1],...
    'HandleVisibility','off',...
    'Callback',@ConfigBrowse_PBCallback);
    function ConfigBrowse_PBCallback(hObject,callbackdata)
        [GuIformat.Configfilename, GuIformat.Configpathname] = uigetfile('*.mat', 'Pick a MATLAB code file');
        set(GuIformat.ConfigLocEDT,'String',fullfile(GuIformat.Configpathname,GuIformat.Configfilename))
    end
GuIformat.ConfigLoadPB = uicontrol(Configuration,...
    'Units','normalized',...
    'Style','Pushbutton',...
    'String','Load Configuration',...
    'Position',[4/6 0 1/6 1],...
    'HandleVisibility','off',...
    'Callback',@ConfigLoad_PBCallback);
    function ConfigLoad_PBCallback(hObject,callbackdata)
        LoadConfig(GuIformat.Configpathname,GuIformat.Configfilename)
        set(GuIformat.ConfigLocEDT,'String',fullfile(GuIformat.Configpathname,GuIformat.Configfilename))
    end
GuIformat.ConfigSavePB = uicontrol(Configuration,...
    'Units','normalized',...
    'Style','Pushbutton',...
    'String','Save Configuration',...
    'Position',[5/6 0 1/6 1],...
    'HandleVisibility','off',...
    'Callback',@ConfigSave_PBCallback);
    function ConfigSave_PBCallback(hObject,callbackdata)
        DATE = datestr(now,'yymmdd');
        [GuIformat.Configfilename,GuIformat.Configpathname] = uiputfile('.mat','File Selection',horzcat(DATE,'_Configuration.mat'));
        UpdateSettings;
        set(GuIformat.ConfigLocEDT,'String',fullfile(GuIformat.Configpathname,GuIformat.Configfilename))
    end

end

%% PANEL SCRIPTING            %gui do eksperymentów

function ScriptingPanel
global vc VIDs GuIformat Panels Scripting;

Control = uipanel(Panels.ScriptingPanel,...
    'Visible','on',...
    'Position',[0 0 1 1]);

GeneralScripting = uipanel(Control,...
    'Visible','on',...
    'Position',[0 0 .15 1]);

ParameterCount = 30;

%% EXPERIMENT DESCRIPTION                        %miejsce do wpisania danych eksperymentu
crrntParameter = 1;
EDTXT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','text',...
    'String','Experiment:',...
    'Position',[0 (ParameterCount - crrntParameter)/ParameterCount 1 1/ParameterCount],...
    'HandleVisibility','off');
crrntParameter = crrntParameter + 1;
InitialsTXT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','text',...
    'String','User Initials:',...
    'Position',[0 (ParameterCount - crrntParameter)/ParameterCount .5 1/ParameterCount],...
    'HandleVisibility','off');
Scripting.InitialsEDT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','edit',...
    'Tooltip','Example: PD',...
    'String','',...
    'Position',[.5 ((ParameterCount - crrntParameter))/ParameterCount .5 1/ParameterCount],...
    'HandleVisibility','off');

crrntParameter = crrntParameter + 1;
MicroscopeTXT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','text',...
    'String','Microscope:',...                        %jest i mikroskop
    'Position',[0 (ParameterCount - crrntParameter)/ParameterCount .5 1/ParameterCount],...
    'HandleVisibility','off');
Scripting.MicroscopeEDT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','Edit',...
    'String','11',...
    'Position',[.5 ((ParameterCount - crrntParameter))/ParameterCount .5 1/ParameterCount],...
    'HandleVisibility','off');

%% REAGENT NAMES
crrntParameter = crrntParameter + 1;
PumpNameSTXT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','text',...
    'String','Reagent Names:',...
    'Position',[0 (ParameterCount - crrntParameter)/ParameterCount 1 1/ParameterCount],...            %dla każdego reagentu tworzy osobne pola i przypisuje osobne pompy
    'HandleVisibility','off');
for REAGENT = 1:GuIformat.ReagentCount
    crrntParameter = crrntParameter + 1;
    
    Scripting.ReagentPanel(REAGENT) = uipanel(GeneralScripting,...
        'Visible','on',...
        'Position',[0 (ParameterCount - crrntParameter)/ParameterCount 1 1/ParameterCount]);
    
    PumpNameTXT = uicontrol(Scripting.ReagentPanel(REAGENT),...
        'Units','normalized',...
        'Style','text',...
        'String',strcat({'Reagent '},num2str(REAGENT)),...
        'Position',[0 0 .25 1],...
        'HandleVisibility','off');
    Scripting.PumpNameEDT(REAGENT) = uicontrol(Scripting.ReagentPanel(REAGENT),...
        'Units','normalized',...
        'Style','edit',...
        'String','',...
        'Position',[.25 0 .75 1],...
        'HandleVisibility','off');
end

%% PLATE TYPE

crrntParameter = crrntParameter + 1;
GeneralSettingsTXT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','text',...
    'String','Experimental Parameters:',...
    'Position',[0 ((ParameterCount - crrntParameter))/ParameterCount 1 1/ParameterCount],...
    'HandleVisibility','off');
crrntParameter = crrntParameter + 1;
PlateTypeTXT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','text',...
    'String','Plate Type:',...
    'Position',[0 ((ParameterCount - crrntParameter))/ParameterCount .5 1/ParameterCount],...
    'HandleVisibility','off');
Scripting.PlateTypePUM = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','popupmenu',...
    'Tooltip','What kind of plate do you want to use?',...
    'Value',3,...
    'UserData',[2,3;4,6;8,12;16,24;],...
    'String',{'2x3 Wells','4x6 Wells','8x12 Wells','16x24 Wells'},...
    'Position',[.5 ((ParameterCount - crrntParameter))/ParameterCount .5 1/ParameterCount],...
    'HandleVisibility','off')

%% STEP COUNT                %liczba powtorzen eksperymentu
crrntParameter = crrntParameter + 1;
StepCountTXT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','text',...
    'String','Steps:',...
    'Position',[0 (ParameterCount - crrntParameter)/ParameterCount .5 1/ParameterCount],...
    'HandleVisibility','off');
Scripting.StepCountEDT = uicontrol(GeneralScripting,...
    'Units','normalized',...
    'Style','edit',...
    'String','1',...
    'Tooltip','How many times should the robot interact with the plate?',...
    'Position',[.5 ((ParameterCount - crrntParameter))/ParameterCount .5 1/ParameterCount],...
    'HandleVisibility','off');
